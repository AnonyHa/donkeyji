使用异常：
1、运行时错误抛异常，比如文件不存在，数据库访问出错，网络连接不上等等，一般是调用别的接口而产生的。
2、静态错误，比如字符串的format写错，dict的key错误等等，不用异常，让其程序挂掉，以便在开发期调试出来。
3、致命错误不需要抛异常，直接让进程退出吧。
4、最好能在第一层捕获并处理异常，因为在这里最容易知道怎么做异常处理，如果继续往高层抛，高层处理的时候信息量变小，也不方便处理。
5、只对有明显raise语句的函数进行try...except操作，其它一些dict访问出错等等导致的系统raise异常属于静态错误，见2。有明显raise的接口函数一定要try。
6、简单的操作，如加减乘除等运算，比较大小等，认为不会产生错误，如果出错，则肯定是程序员写错了。
7、需要返回值的函数，正常返回时用return，异常时用raise，保证其调用者只要能得到返回值就一定是正常情况。

疑问：
1、需要每个函数都try...except吗？






三种出错处理方式的优缺点 在程序设计中，这三种不同的出错处理方式： 
1: 用exit语句终止，并返回报告错误； 致命错误这么做，如果是要打开的文件不存在之类的错误就不要exit了。 

2：以函数的返回值区别正确返回或错误返回 如果你不关心为什么出错的话用这种 

3：设置一个整型变量的函数参数以区别正确返回或某种错误返回 需要了解错误的详细原因用这个。 

exit用于程序执行下去没有意义的时候，如果不是致命错误，尽量不要使用exit退出，大部分的错误都应该可以用程序作出适当的处理，没有人喜欢用一个动不动就出错退出的软件。 是否使用第2，3种处理方式要看在你的上下文中是否有处理这个错误的足够信息，要看上层是否关心这个错误.